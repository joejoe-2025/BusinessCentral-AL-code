pageextension 50330 ItemCard_LabelDownloadExt extends "Item Card"
{
    actions
    {
        addlast(Processing)
        {
            action(DownloadItemLabel)
            {
                Caption = 'Download Label';
                ApplicationArea = All;
                Image = Export;

                trigger OnAction()
                var
                    TempBlob: Codeunit "Temp Blob";
                    OutStream: OutStream;
                    InStream: InStream;
                    FileName: Text;
                    RecRef: RecordRef;
                    FieldRef: FieldRef;
                begin
                    FileName := Rec."No." + '-' + DELCHR(Rec.Description, '=', '"/\:*?<>|') + '.docx';

                    TempBlob.CreateOutStream(OutStream);

                    // ÊâìÂºÄ RecordRefÔºåÂπ∂ËÆæÁΩÆËøáÊª§Âô®‰∏∫ÂΩìÂâçËÆ∞ÂΩï
                    RecRef.Open(Database::Item);
                    FieldRef := RecRef.Field(1); // Â≠óÊÆµ 1 = No.
                    FieldRef.SetFilter('%1', Rec."No.");

                    Report.SaveAs(Report::ItemLabelReport, '', ReportFormat::Word, OutStream, RecRef);

                    TempBlob.CreateInStream(InStream);
                    DownloadFromStream(InStream, '', '', '', FileName);
                end;


            }

            action(SendItemLabelByEmail)
            {
                Caption = 'Send Email';
                ApplicationArea = All;
                Image = Email;

                trigger OnAction()
                var
                    TempBlob: Codeunit "Temp Blob";
                    OutStream: OutStream;
                    InStream: InStream;
                    FileName: Text;
                    RecRef: RecordRef;
                    FieldRef: FieldRef;
                    EmailMsg: Codeunit "Email Message";
                    Email: Codeunit Email;
                    EmailAddr: Text;
                    Subject: Text;
                    Body: Text;
                begin
                    FileName := Rec."No." + '-' + DELCHR(Rec.Description, '=', '"/\:*?<>|') + '.docx';

                    TempBlob.CreateOutStream(OutStream);

                    // üëá ÂÆåÂÖ®‰∏ÄÊ†∑ÁöÑÊñπÂºèÔºåÁ°Æ‰øùÂíå‰Ω†ÁöÑDownload‰ª£Á†Å‰∏ÄËá¥
                    RecRef.Open(Database::Item);
                    FieldRef := RecRef.Field(1); // Â≠óÊÆµ1 = No.
                    FieldRef.SetFilter('%1', Rec."No.");

                    Report.SaveAs(Report::ItemLabelReport, '', ReportFormat::Word, OutStream, RecRef);

                    TempBlob.CreateInStream(InStream);



                    Subject := 'Item Label - ' + Rec."No.";
                    Body := 'Hi,' + FORMAT(13) + FORMAT(10) +
                            'Please find attached the label for item: ' + Rec."No." + '.' + FORMAT(13) + FORMAT(10) +
                            'Regards,';

                    EmailMsg.Create(
                                   'joe@bigals.ca',                             // sender
                                   'joe@bigals.ca',        // recipient
                                   'Item Label Report - ' + Rec."No.", // subject
                                   false                           // isBodyHtml
                               );
                    EmailMsg.SetBody(Body);

                    // Add attachment
                    EmailMsg.AddAttachment(
                        FileName,
                        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
                        InStream
                    );

                    Email.Send(EmailMsg);
                end;
            }
            action(PrintAndPreview)
            {
                Caption = 'Print & Preview';
                ApplicationArea = All;
                Image = Print;

                trigger OnAction()
                var
                    ItemRec: Record Item;
                begin
                    ItemRec.SetRange("No.", Rec."No."); // ‚úÖ ËÆæÁΩÆËøáÊª§Âô®‰∏∫ÂΩìÂâç Item
                    Report.RunModal(Report::ItemLabelReport, true, false, ItemRec);
                end;
            }


            action(PrintDirectly)
            {
                Caption = 'Print!!!';
                ApplicationArea = All;
                Image = Print;

                trigger OnAction()
                var
                    ItemRec: Record Item;
                begin
                    ItemRec.SetRange("No.", Rec."No.");
                    // Áõ¥Êé•Áî®false/falseÂèÇÊï∞ÔºåReport‰ºöÂ∞ùËØïËµ∞‚ÄúÁõ¥Êé•ÊâìÂç∞‚ÄùËÄåÈùû‚ÄúÈ¢ÑËßà‚Äù
                    Report.RunModal(Report::ItemLabelReport, false, false, ItemRec);
                end;
            }
        }



    }
}
